package com.environment.view.Flower;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Acer
 */
public final class Flowers extends javax.swing.JPanel {
private final List<FlowerData> list;

    int row, col;

    public Flowers() {
        initComponents();
        list = new ArrayList<>();

        populateList();
        showData();
    }

    public void showData() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < list.size(); i++) {
            FlowerData info = list.get(i);
            String[] data = {info.getName(), info.getHealthBenefits(), info.getCommonUse()};
            tableModel.addRow(data);
        }
    }

    public void populateList() {
        try {
            FileInputStream fi = new FileInputStream(new File("myFlowersDatabase.txt"));
            ObjectInputStream oi = new ObjectInputStream(fi);

            FlowerData[] md = (FlowerData[]) oi.readObject();
            list.addAll(Arrays.asList(md));
        } catch (Exception e) {
        }

    }

    public void saveToFile() {

        try {
            FileOutputStream fo = new FileOutputStream(new File("myFlowersDatabase.txt"));
            try (ObjectOutputStream oo = new ObjectOutputStream(fo)) {
                FlowerData[] md = new FlowerData[list.size()];
                md = list.toArray(md);

                oo.writeObject(md);
            }

        } catch (IOException e) {
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        HealthBenifits = new javax.swing.JLabel();
        CommonUses = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jTextHealthBenifits = new javax.swing.JTextField();
        jCBCommonUses = new javax.swing.JComboBox<>();
        ADD = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        EDIT = new javax.swing.JButton();
        SEARCH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        EXIT = new javax.swing.JButton();
        RESET = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));

        Title.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        Title.setText("Plants as Health Treatment");

        Name.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        Name.setText("Plant's Name :");

        HealthBenifits.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        HealthBenifits.setText("Health Benifits : ");

        CommonUses.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        CommonUses.setText("Common Uses : ");

        jTextName.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jTextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNameActionPerformed(evt);
            }
        });

        jTextHealthBenifits.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N

        jCBCommonUses.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jCBCommonUses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brew leaves for tea", "Apply essential oil", "Use as ingredients or ganish", "Consume raw" }));

        ADD.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        DELETE.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        EDIT.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        EDIT.setText("EDIT");
        EDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITActionPerformed(evt);
            }
        });

        SEARCH.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        SEARCH.setText("SEARCH");
        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Health Benefits", "Common Uses"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        EXIT.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        EXIT.setText("EXIT");
        EXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITActionPerformed(evt);
            }
        });

        RESET.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        RESET.setText("RESET");
        RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESETActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(RESET)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EXIT))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HealthBenifits)
                            .addComponent(Name)
                            .addComponent(ADD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextName)
                            .addComponent(jTextHealthBenifits)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Title)
                                    .addComponent(jCBCommonUses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DELETE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                                .addComponent(EDIT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(125, 125, 125)
                                .addComponent(SEARCH))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CommonUses)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HealthBenifits)
                    .addComponent(jTextHealthBenifits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CommonUses)
                    .addComponent(jCBCommonUses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADD)
                    .addComponent(DELETE)
                    .addComponent(EDIT)
                    .addComponent(SEARCH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EXIT)
                    .addComponent(RESET))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNameActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        String name = jTextName.getText();
        String healthBenifits = jTextHealthBenifits.getText();
        String commonUses = jCBCommonUses.getSelectedItem().toString();

        FlowerData info = new FlowerData(name, healthBenifits, commonUses);
        list.add(info);

        String[] data = {info.getName(), info.getHealthBenefits(), info.getCommonUse()};
        tableModel.addRow(data);

        clearField();

        saveToFile();
    }

    private void clearField() {
        jTextName.requestFocus();
        jTextName.setText("");
        jTextHealthBenifits.setText("");
        jCBCommonUses.setSelectedIndex(0);
    }//GEN-LAST:event_ADDActionPerformed

    private void EXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_EXITActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        // TODO add your handling code here:        
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dialogButton);
        if (dialogResult == 0) {
            tableModel.removeRow(row);
            list.remove(row);

            clearField();
        } else {

        }

        saveToFile();
    
    }//GEN-LAST:event_DELETEActionPerformed

    private void EDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITActionPerformed
        // TODO add your handling code here:
        String editedname = jTextName.getText();
        String editedhealthBenefits = jTextHealthBenifits.getText();
        String editedcommonuses = jCBCommonUses.getSelectedItem().toString();

        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        int index = jTable1.getSelectedRow();
        FlowerData flowerData = list.get(index);

        flowerData.setName(editedname);
        flowerData.setHealthBenefits(editedhealthBenefits);
        flowerData.setCommonUse(editedcommonuses);

        tableModel.setValueAt(editedname, jTable1.getSelectedRow(), 0);
        tableModel.setValueAt(editedhealthBenefits, jTable1.getSelectedRow(), 1);
        tableModel.setValueAt(editedcommonuses, jTable1.getSelectedRow(), 2);
        
        clearField();
        saveToFile();
       
     
    }//GEN-LAST:event_EDITActionPerformed

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
        String input = JOptionPane.showInputDialog(this, "Search Flower Name : ");

        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getName().equalsIgnoreCase(input)) {
                JOptionPane.showMessageDialog(SEARCH, "Found!!!", "Search flower", 2);
                jTextName.setText(list.get(i).getName());
                jTextHealthBenifits.setText(list.get(i).getHealthBenefits());
                String commonuses = list.get(i).getCommonUse();
                return;
            }
        }

        JOptionPane.showMessageDialog(SEARCH, "Not Found!!!", "Search Flower", 2);  
    }//GEN-LAST:event_SEARCHActionPerformed

    private void RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESETActionPerformed
        clearField();
// TODO add your handling code here:
    }//GEN-LAST:event_RESETActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        row = jTable1.getSelectedRow();
        col = jTable1.getColumnCount();
        System.out.println(row+","+col);
        
        jTextName.setText(jTable1.getValueAt(row, 0).toString());
        jTextHealthBenifits.setText(jTable1.getValueAt(row, 1).toString());
        String commonuses = (jTable1.getValueAt(row, 2).toString());
        
        for (int i=0; i<(jCBCommonUses.getItemCount()); i++){
            if (jCBCommonUses.getItemAt(i).equalsIgnoreCase(commonuses)){
                jCBCommonUses.setSelectedIndex(i);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked
   
    public static void main(String[] args) {
        JFrame frame = new JFrame();
        frame.setVisible(true);
        frame.setSize(700, 500);
        frame.add(new Flowers());

        java.awt.EventQueue.invokeLater(() -> {
            new Flowers().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JLabel CommonUses;
    private javax.swing.JButton DELETE;
    private javax.swing.JButton EDIT;
    private javax.swing.JButton EXIT;
    private javax.swing.JLabel HealthBenifits;
    private javax.swing.JLabel Name;
    private javax.swing.JButton RESET;
    private javax.swing.JButton SEARCH;
    private javax.swing.JLabel Title;
    private javax.swing.JComboBox<String> jCBCommonUses;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextHealthBenifits;
    private javax.swing.JTextField jTextName;
    // End of variables declaration//GEN-END:variables
}
